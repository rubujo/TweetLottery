<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TEo7Hmh1ngAAAABJRU5ErkJggg==
</value>
  </data>
</root>